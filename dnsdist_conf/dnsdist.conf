-- vim: filetype=lua:expandtab:shiftwidth=4:tabstop=4:softtabstop=4

-- listening setting
-- ipv4 线程listen
addLocal('0.0.0.0', {reusePort = true})
addLocal('0.0.0.0', {reusePort = true})
-- ipv6 线程listen
addLocal('::', {reusePort = true})
addLocal('::', {reusePort = true})

-- web & control
webserver("0.0.0.0:8083", "xxxx", "xxxx")
controlSocket('127.0.0.1:5199')

-- tuning
--[["
每个本地绑定都有自己的线程侦听传入的UDP查询
和它自己的线程侦听传入的TCP连接，立即将它们分派给一个线程池
每个后端都有自己的线程来监听UDP响应
维护线程每秒调用maintenance（）Lua函数（如果有的话），并负责清理缓存
运行状况检查线程检查后端可用性
控制线程处理控制台连接
如果需要，碳线程将统计数据导出到碳服务器
一个或多个Web服务器线程处理对内部Web服务器的查询
"]]
setMaxTCPClientThreads(3000)
setMaxTCPConnectionDuration(5)
setMaxTCPQueuedConnections(3000)

--将解析劫持到指定dns server上解析需要先创建一个pool
-- 比如将stackoverflow.com 劫持到8.8.8.8上解析,先创建一个forward pool
--auto forward pool by sys sre
newServer({address="8.8.8.8", pool="forward"})


-- view-a dns权威servers  authority, etc
newServer({address="1.1.1.1", pool="view-a"})
newServer({address="1.1.1.2", pool="view-a"})

-- view-b dns权威servers  authority, etc
newServer({address="2.1.1.1", pool="view-b"})
newServer({address="2.1.1.2", pool="view-b"})


-- 新建一个pool的cache(条目数,最大TTL,最小TTL,当后端servFail或者refuse的时候cache时间[temporaryFailureTTL ],当后端不可达的时候staleTTL 陈旧条目过期时间, 当dnsdist面向权威服务器时cache记录不减少ttl)
-- cache settings. MaxTTL = 7200, StaleTTL = 7200
pc = newPacketCache(500000, 7200, 0, 60, 7200, false)
getPool("view-a"):setCache(pc)

pc = newPacketCache(500000, 7200, 0, 60, 7200, false)
getPool("view-b"):setCache(pc)

-- 比如将stackoverflow.com 劫持到8.8.8.8上解析
addAction(makeRule({"stackoverflow.com"}), PoolAction("forward"))

--auto spoof by sys sre
-- 直接劫持A记录
addAction(makeRule({"baidu.com"}), SpoofAction("7.8.8.8"))
-- 默认递归走view-a
addAction(RDRule(), PoolAction("view-a"))
